version: "2"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--log.level=ERROR"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=marcelodefreitas25@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - local-net
      - proxy

  db:
    container_name: db
    build: ./backend/docker/mysql
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: fmdeploy_db
      MYSQL_USER: user
      MYSQL_PASSWORD: 2f2kir2y49xy6g
      MYSQL_ROOT_PASSWORD: 2f2kir2y49xy6g
    volumes:
      - ./backend/docker/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./backend/docker/mysql/conf.d:/etc/mysql/conf.d
      - ./backend/log/mysql:/var/log/mysql
      - persist-mysql:/var/lib/mysql
    networks:
      - local-net
      - proxy

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.backend.rule=Host(`api.fmdeploy.me`)"
      - "traefik.http.routers.backend.service=backend"
      # The internal service port that Traefik will forward the request to it.
      - "traefik.http.services.backend.loadbalancer.server.port=36554"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
    volumes:
      - ./backend:/app/:cached
      - ./inputfiles:/inputfiles
      - ./modelfiles:/modelfiles
      - ./outputfiles:/outputfiles
    networks:
      - local-net
      - proxy
    depends_on:
      - db
      - traefik

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - URI=http://api.fmdeploy.me
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.frontend.rule=Host(`client.fmdeploy.me`)"
      - "traefik.http.routers.frontend.service=frontend"
      # The internal service port that Traefik will forward the request to it.
      - "traefik.http.services.frontend.loadbalancer.server.port=36555"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    volumes:
      - ./frontend:/app:cached
      - ./frontend/node_modules:/app/node_modules:cached
    networks:
      - local-net
      - proxy
    depends_on:
      - db
      - backend
      - traefik

networks:
  local-net:
    driver: bridge
  proxy:
    driver: bridge

volumes:
  persist-mysql:
