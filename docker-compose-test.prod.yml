version: '2'

services:

  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - --log.level=ERROR
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=namedotcom
      - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.letsencrypt.acme.email=marcelodefreitas25@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - NAMECOM_USERNAME=marcelodefreitas
      - NAMECOM_API_TOKEN=9c22fecbcf9762e6aba891832dc2b39c7fff4747
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
        
  backend:
    build:
      context: backend
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
      - ./database:/database.db
      - ./inputfiles:/inputfiles
      - ./modelfiles:/modelfiles
      - ./outputfiles:/outputfiles
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`api.fmdeploy.live`)
      - traefik.http.routers.backend.entrypoints=websecure
      - traefik.http.routers.backend.tls.certresolver=letsencrypt

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend:/app:cached
      - ./frontend/node_modules:/app/node_modules:cached
      - ./frontend/build:/build
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`app.fmdeploy.live`)
      - traefik.http.services.frontend.loadbalancer.server.port=3000
      - traefik.http.routers.frontend.entrypoints=websecure
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt